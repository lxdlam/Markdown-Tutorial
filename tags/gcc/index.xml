<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>GCC - 标签 - Ramen's Box</title><link>https://blog.lxdlam.com/tags/gcc/</link><description>GCC - 标签 - Ramen's Box</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>lxdlam@gmail.com (Ramen)</managingEditor><webMaster>lxdlam@gmail.com (Ramen)</webMaster><copyright>本站所有内容基于署名-非商业性使用-相同方式共享 4.0 国际协议（CC BY-NC-SA 4.0）给出许可</copyright><lastBuildDate>Mon, 01 May 2017 01:59:31 +0800</lastBuildDate><atom:link href="https://blog.lxdlam.com/tags/gcc/" rel="self" type="application/rss+xml"/><item><title>Windows下的random_device</title><link>https://blog.lxdlam.com/post/a1ef2058/</link><pubDate>Mon, 01 May 2017 01:59:31 +0800</pubDate><author>Ramen</author><guid>https://blog.lxdlam.com/post/a1ef2058/</guid><description><![CDATA[<h2 id="缘起">缘起</h2>
<p>整个事情的起因是这样的：</p>
<p>C++第四个实验要生成一组随机序列数，众所周知，<code>rand()</code>函数用的线性同余法生成随机数，但是这个随机数实际上是一个伪随机数。然后我就想用<code>std::random_device</code>来生成真随机数。然而在Windows下，GCC的表现却让我大跌眼镜。编译环境是MinGW gcc5.3.0。</p>]]></description></item><item><title>GCC 6.3.0 手动编译安装</title><link>https://blog.lxdlam.com/post/fa1ca4ee/</link><pubDate>Sat, 15 Apr 2017 20:25:31 +0800</pubDate><author>Ramen</author><guid>https://blog.lxdlam.com/post/fa1ca4ee/</guid><description><![CDATA[<p>GCC，即The GNU Compiler Collection，是GNU计划的最关键组成部分。</p>
<p>GCC是一整套编译器的集合，大家使用的Code::Blocks使用的就是由MinGW提供的GCC编译套件。</p>
<p>刚刚看Debian 9的新闻的时候发现Debian 9将升级GCC到6，我看了一下，最让人振奋的是编译标准从C++98提升到了C++14，要知道C++11后这门语言已经大有不同，所以这个升级很让我心动。</p>
<p>GCC作为Linux最核心的一部分，没有提供现成的软件包直接安装，所以写一遍简短的笔记记一下安装过程，也给后来人参考。</p>
<p>文章发布时GCC 6最新的Release版本是6.3.0。安装的系统是Elementary OS 0.4，基于Ubuntu 16.04。</p>]]></description></item></channel></rss>